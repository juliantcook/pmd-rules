plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.juliantcook'
version '0.0.1'

repositories {
    mavenCentral()
}

sourceSets {
    docGen
}

dependencies {
    implementation group: 'net.sourceforge.pmd', name: 'pmd-java', version: '6.34.0'
    testImplementation group: 'net.sourceforge.pmd', name: 'pmd-test', version: '6.34.0'
    testImplementation group: 'javax.inject', name: 'javax.inject', version: '1'
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.1'

    docGenImplementation group: 'net.sourceforge.pmd', name: 'pmd-doc', version: '6.34.0'
    docGenImplementation sourceSets.main.output
}

test {
    useJUnitPlatform()
}

task generateRuleDocs(type: JavaExec) {
    doFirst { standardOutput(new FileOutputStream("${project.rootDir}/docs/rules.md")) }
    classpath sourceSets.docGen.runtimeClasspath
    main 'io.github.juliantcook.pmdrules.GenerateDocs'
    systemProperty 'SOURCE_ROOT_LINK', 'https://github.com/juliantcook/pmd-rules/blob/master/src/main/java/'
    args "${project.rootDir}/src/main/resources/category/java/"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = "${project.group}:${project.name}"
                description = 'Some custom PMD rules'
                url = 'https://juliantcook.github.io/pmd-rules/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jcook'
                        name = 'Julian Cook'
                        email = 'juliantcook@gmail.com'
                        organizationUrl = 'https://github.com/juliantcook'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:juliantcook/pmd-rules.git'
                    developerConnection = 'scm:git:ssh://github.com:juliantcook/pmd-rules.git'
                    url = 'https://github.com/juliantcook/pmd-rules'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username 'jcook'
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}
